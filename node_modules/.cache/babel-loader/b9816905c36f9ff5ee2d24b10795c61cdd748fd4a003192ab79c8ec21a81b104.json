{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  isLoad: false,\n  isShowInfo: false,\n  downloadSize: 0,\n  startTime: 0,\n  endTime: 0,\n  speed: 0\n};\nexport const speedtestSlice = createSlice({\n  name: 'speedtest',\n  initialState,\n  reducers: {\n    start: state => {\n      state.isLoad = true;\n      state.isShowInfo = false;\n      state.startTime = new Date().getTime();\n      state.speed = 0;\n    },\n    calc: state => {\n      let duration = (state.endTime - state.startTime) / 1000;\n      let bitsLoaded = state.downloadSize;\n      let speedBps = (bitsLoaded / duration).toFixed(2);\n      let speedKbps = (speedBps / 1024).toFixed(2);\n      let speedMbps = (speedKbps / 1024).toFixed(2);\n      state.speed = speedMbps;\n    },\n    setEndTime: (state, action) => {\n      state.endTime = action.payload;\n    },\n    setDownloadSize: (state, action) => {\n      state.downloadSize = action.payload;\n    },\n    stop: state => {\n      state.isLoad = false;\n      state.isShowInfo = true;\n    }\n  }\n});\nconst {\n  setEndTime,\n  setDownloadSize,\n  calc\n} = speedtestSlice.actions;\nexport const startAsync = () => dispatch => {\n  dispatch(start());\n  let endRequest = () => {\n    let endTime = new Date().getTime();\n    dispatch(setEndTime(endTime));\n    dispatch(calc());\n    dispatch(stop());\n  };\n  axios.get('https://cache-khabrt05.cdn.yandex.net/internetometr.download.cdn.yandex.net/bigfile.png?1647253096558', {\n    timeout: 5000,\n    onDownloadProgress: progressEvent => {\n      dispatch(setDownloadSize(progressEvent.loaded));\n    },\n    headers: {\n      'Cache-Control': 'no-cache'\n    }\n  }).then(endRequest).catch(endRequest);\n};\nexport const {\n  start,\n  stop\n} = speedtestSlice.actions;\nexport const selectSpeed = state => state.speedtest.speed;\nexport const selectIsLoad = state => state.speedtest.isLoad;\nexport const selectIsShowInfo = state => state.speedtest.isShowInfo;\nexport default speedtestSlice.reducer;","map":{"version":3,"names":["createSlice","axios","initialState","isLoad","isShowInfo","downloadSize","startTime","endTime","speed","speedtestSlice","name","reducers","start","state","Date","getTime","calc","duration","bitsLoaded","speedBps","toFixed","speedKbps","speedMbps","setEndTime","action","payload","setDownloadSize","stop","actions","startAsync","dispatch","endRequest","get","timeout","onDownloadProgress","progressEvent","loaded","headers","then","catch","selectSpeed","speedtest","selectIsLoad","selectIsShowInfo","reducer"],"sources":["/home/raed/Desktop/Alat Hasibah/src/store/speedtestSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst initialState = {\n  isLoad: false,\n  isShowInfo: false,\n  downloadSize: 0,\n  startTime: 0,\n  endTime: 0,\n  speed: 0\n}\n\nexport const speedtestSlice = createSlice({\n  name: 'speedtest',\n  initialState,\n  reducers: {\n    start: (state) => {\n      state.isLoad = true\n      state.isShowInfo = false\n\n      state.startTime = new Date().getTime()\n\n      state.speed = 0\n    },\n    calc: (state) => {\n      let duration = (state.endTime - state.startTime) / 1000\n      \n      let bitsLoaded = state.downloadSize\n      let speedBps = (bitsLoaded / duration).toFixed(2)\n      let speedKbps = (speedBps / 1024).toFixed(2)\n      let speedMbps = (speedKbps / 1024).toFixed(2)\n\n      state.speed = speedMbps\n    },\n    setEndTime: (state, action) => {\n      state.endTime = action.payload\n    },\n    setDownloadSize: (state, action) => {\n      state.downloadSize = action.payload\n    },\n    stop: (state) => {\n      state.isLoad = false\n      state.isShowInfo = true\n    }\n  }\n})\n\nconst { setEndTime, setDownloadSize, calc } = speedtestSlice.actions\n\nexport const startAsync = () => (dispatch) => {\n  dispatch(start())\n\n  let endRequest = () => {\n    let endTime = new Date().getTime()\n      dispatch(setEndTime(endTime))\n      dispatch(calc())\n      dispatch(stop())\n  }\n\n  axios.get('https://cache-khabrt05.cdn.yandex.net/internetometr.download.cdn.yandex.net/bigfile.png?1647253096558', { \n    timeout: 5000,\n    onDownloadProgress: (progressEvent) => {\n      dispatch(setDownloadSize(progressEvent.loaded))\n    },\n    headers: {\n      'Cache-Control': 'no-cache'\n    }\n  })\n    .then(endRequest)\n    .catch(endRequest)\n}\n\nexport const { start, stop } = speedtestSlice.actions\n\nexport const selectSpeed = (state) => state.speedtest.speed\nexport const selectIsLoad = (state) => state.speedtest.isLoad\nexport const selectIsShowInfo = (state) => state.speedtest.isShowInfo\n\nexport default speedtestSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}