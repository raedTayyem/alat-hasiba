{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], function (_ref) {\n  var typed = _ref.typed,\n    ceil = _ref.ceil,\n    floor = _ref.floor;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function numberNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, function (_ref2) {\n  var typed = _ref2.typed,\n    _Complex = _ref2.Complex,\n    matrix = _ref2.matrix,\n    ceil = _ref2.ceil,\n    floor = _ref2.floor,\n    equalScalar = _ref2.equalScalar,\n    zeros = _ref2.zeros,\n    DenseMatrix = _ref2.DenseMatrix;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed: typed\n  });\n  var fixNumber = createFixNumber({\n    typed: typed,\n    ceil: ceil,\n    floor: floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\n    },\n    'Array | Matrix': typed.referToSelf(function (self) {\n      return function (x) {\n        // deep map collection, skip zeros since fix(0) = 0\n        return deepMap(x, self, true);\n      };\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(function (self) {\n      return function (x, n) {\n        // deep map collection, skip zeros since fix(0) = 0\n        return deepMap(x, function (i) {\n          return self(i, n);\n        }, true);\n      };\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(function (self) {\n      return function (x, y) {\n        // use matrix implementation\n        return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n      };\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(function (self) {\n      return function (x, y) {\n        if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n        if (y.storage() === 'dense') {\n          return matAlgo14xDs(y, x, self, true);\n        }\n        return matAlgo12xSfs(y, x, self, true);\n      };\n    })\n  });\n});","map":{"version":3,"names":["factory","deepMap","createMatAlgo12xSfs","createMatAlgo14xDs","name","dependencies","createFixNumber","_ref","typed","ceil","floor","number","x","numberNumber","n","createFix","_ref2","_Complex","Complex","matrix","equalScalar","zeros","DenseMatrix","matAlgo12xSfs","matAlgo14xDs","fixNumber","signatures","re","Math","im","ComplexNumber","ComplexBigNumber","bn","toNumber","BigNumber","isNegative","BigNumberNumberBigNumber","Fraction","s","FractionNumberBigNumber","referToSelf","self","i","y","valueOf","size","storage"],"sources":["/home/raed/Desktop/Alat Hasibah/node_modules/mathjs/lib/esm/function/arithmetic/fix.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\n  var {\n    typed,\n    ceil,\n    floor\n  } = _ref;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function numberNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref2;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed,\n    DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  var fixNumber = createFixNumber({\n    typed,\n    ceil,\n    floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\n    },\n    'Array | Matrix': typed.referToSelf(self => x => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, self, true);\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => self(i, n), true);\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n      if (y.storage() === 'dense') {\n        return matAlgo14xDs(y, x, self, true);\n      }\n      return matAlgo12xSfs(y, x, self, true);\n    })\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}