{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/raed/Desktop/Alat Hasibah/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/raed/Desktop/Alat Hasibah/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/raed/Desktop/Alat Hasibah/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { setSafeProperty, hasSafeProperty, getSafeProperty } from './customs.js';\nimport { isObject } from './is.js';\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\nexport var ObjectWrappingMap = /*#__PURE__*/function () {\n  function ObjectWrappingMap(object) {\n    _classCallCheck(this, ObjectWrappingMap);\n    this.wrappedObject = object;\n  }\n  _createClass(ObjectWrappingMap, [{\n    key: \"keys\",\n    value: function keys() {\n      return Object.keys(this.wrappedObject);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return getSafeProperty(this.wrappedObject, key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      setSafeProperty(this.wrappedObject, key, value);\n      return this;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return hasSafeProperty(this.wrappedObject, key);\n    }\n  }]);\n  return ObjectWrappingMap;\n}();\n\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\nexport function createEmptyMap() {\n  return new Map();\n}\n\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\nexport function createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n  if (isObject(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n  throw new Error('createMap can create maps from objects or Maps');\n}\n\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\nexport function toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n  var object = {};\n  var _iterator = _createForOfIteratorHelper(map.keys()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var value = map.get(key);\n      setSafeProperty(object, key, value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return object;\n}\n\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\nexport function isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\n\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\nexport function assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (var _i = 0, _objects = objects; _i < _objects.length; _i++) {\n    var args = _objects[_i];\n    if (!args) {\n      continue;\n    }\n    if (isMap(args)) {\n      var _iterator2 = _createForOfIteratorHelper(args.keys()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          map.set(key, args.get(key));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    } else if (isObject(args)) {\n      for (var _i2 = 0, _Object$keys = Object.keys(args); _i2 < _Object$keys.length; _i2++) {\n        var _key2 = _Object$keys[_i2];\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n  return map;\n}","map":{"version":3,"names":["setSafeProperty","hasSafeProperty","getSafeProperty","isObject","ObjectWrappingMap","object","wrappedObject","Object","keys","key","value","createEmptyMap","Map","createMap","mapOrObject","isMap","Error","toObject","map","get","set","has","assign","_len","arguments","length","objects","Array","_key","args","_key2"],"sources":["/home/raed/Desktop/Alat Hasibah/node_modules/mathjs/lib/esm/utils/map.js"],"sourcesContent":["import { setSafeProperty, hasSafeProperty, getSafeProperty } from './customs.js';\nimport { isObject } from './is.js';\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\nexport class ObjectWrappingMap {\n  constructor(object) {\n    this.wrappedObject = object;\n  }\n  keys() {\n    return Object.keys(this.wrappedObject);\n  }\n  get(key) {\n    return getSafeProperty(this.wrappedObject, key);\n  }\n  set(key, value) {\n    setSafeProperty(this.wrappedObject, key, value);\n    return this;\n  }\n  has(key) {\n    return hasSafeProperty(this.wrappedObject, key);\n  }\n}\n\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\nexport function createEmptyMap() {\n  return new Map();\n}\n\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\nexport function createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n  if (isObject(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n  throw new Error('createMap can create maps from objects or Maps');\n}\n\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\nexport function toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n  var object = {};\n  for (var key of map.keys()) {\n    var value = map.get(key);\n    setSafeProperty(object, key, value);\n  }\n  return object;\n}\n\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\nexport function isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\n\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\nexport function assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (var args of objects) {\n    if (!args) {\n      continue;\n    }\n    if (isMap(args)) {\n      for (var key of args.keys()) {\n        map.set(key, args.get(key));\n      }\n    } else if (isObject(args)) {\n      for (var _key2 of Object.keys(args)) {\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n  return map;\n}"],"mappings":";;;AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,eAAe,QAAQ,cAAc;AAChF,SAASC,QAAQ,QAAQ,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,iBAAiB;EAC5B,2BAAYC,MAAM,EAAE;IAAA;IAClB,IAAI,CAACC,aAAa,GAAGD,MAAM;EAC7B;EAAC;IAAA;IAAA,OACD,gBAAO;MACL,OAAOE,MAAM,CAACC,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC;IACxC;EAAC;IAAA;IAAA,OACD,aAAIG,GAAG,EAAE;MACP,OAAOP,eAAe,CAAC,IAAI,CAACI,aAAa,EAAEG,GAAG,CAAC;IACjD;EAAC;IAAA;IAAA,OACD,aAAIA,GAAG,EAAEC,KAAK,EAAE;MACdV,eAAe,CAAC,IAAI,CAACM,aAAa,EAAEG,GAAG,EAAEC,KAAK,CAAC;MAC/C,OAAO,IAAI;IACb;EAAC;IAAA;IAAA,OACD,aAAID,GAAG,EAAE;MACP,OAAOR,eAAe,CAAC,IAAI,CAACK,aAAa,EAAEG,GAAG,CAAC;IACjD;EAAC;EAAA;AAAA;;AAGH;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,cAAc,GAAG;EAC/B,OAAO,IAAIC,GAAG,EAAE;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAACC,WAAW,EAAE;EACrC,IAAI,CAACA,WAAW,EAAE;IAChB,OAAOH,cAAc,EAAE;EACzB;EACA,IAAII,KAAK,CAACD,WAAW,CAAC,EAAE;IACtB,OAAOA,WAAW;EACpB;EACA,IAAIX,QAAQ,CAACW,WAAW,CAAC,EAAE;IACzB,OAAO,IAAIV,iBAAiB,CAACU,WAAW,CAAC;EAC3C;EACA,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAACC,GAAG,EAAE;EAC5B,IAAIA,GAAG,YAAYd,iBAAiB,EAAE;IACpC,OAAOc,GAAG,CAACZ,aAAa;EAC1B;EACA,IAAID,MAAM,GAAG,CAAC,CAAC;EAAC,2CACAa,GAAG,CAACV,IAAI,EAAE;IAAA;EAAA;IAA1B,oDAA4B;MAAA,IAAnBC,GAAG;MACV,IAAIC,KAAK,GAAGQ,GAAG,CAACC,GAAG,CAACV,GAAG,CAAC;MACxBT,eAAe,CAACK,MAAM,EAAEI,GAAG,EAAEC,KAAK,CAAC;IACrC;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,OAAOL,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,KAAK,CAACV,MAAM,EAAE;EAC5B;EACA;EACA,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,KAAK;EACd;EACA,OAAOA,MAAM,YAAYO,GAAG,IAAIP,MAAM,YAAYD,iBAAiB,IAAI,OAAOC,MAAM,CAACe,GAAG,KAAK,UAAU,IAAI,OAAOf,MAAM,CAACc,GAAG,KAAK,UAAU,IAAI,OAAOd,MAAM,CAACG,IAAI,KAAK,UAAU,IAAI,OAAOH,MAAM,CAACgB,GAAG,KAAK,UAAU;AACtN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAM,CAACJ,GAAG,EAAE;EAC1B,KAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,OAAO,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC7GF,OAAO,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EACrC;EACA,4BAAiBF,OAAO,8BAAE;IAArB,IAAIG,IAAI;IACX,IAAI,CAACA,IAAI,EAAE;MACT;IACF;IACA,IAAId,KAAK,CAACc,IAAI,CAAC,EAAE;MAAA,4CACCA,IAAI,CAACrB,IAAI,EAAE;QAAA;MAAA;QAA3B,uDAA6B;UAAA,IAApBC,GAAG;UACVS,GAAG,CAACE,GAAG,CAACX,GAAG,EAAEoB,IAAI,CAACV,GAAG,CAACV,GAAG,CAAC,CAAC;QAC7B;MAAC;QAAA;MAAA;QAAA;MAAA;IACH,CAAC,MAAM,IAAIN,QAAQ,CAAC0B,IAAI,CAAC,EAAE;MACzB,iCAAkBtB,MAAM,CAACC,IAAI,CAACqB,IAAI,CAAC,oCAAE;QAAhC,IAAIC,KAAK;QACZZ,GAAG,CAACE,GAAG,CAACU,KAAK,EAAED,IAAI,CAACC,KAAK,CAAC,CAAC;MAC7B;IACF;EACF;EACA,OAAOZ,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}